{"ast":null,"code":"var _jsxFileName = \"/home/john/Documents/work/siit-react-master/src/components/movies/MovieList.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport MovieCard from \"./MovieCard\";\n\nfunction MovieList() {\n  // the variable declaration is made using an array destructuring assignment\n  // useState sets up a state variable and a setter function for that state variable\n  // when the state variable changes the component gets updated\n  let [movies, setMovies] = useState([]); // useEffect runs side effects for our component\n  // side effects are any actions that are either influenced from outside the component or are influencing other things outside our component\n  // useEffect has a function as the first param and an array of state variables or props which it depends on as the second variable\n  // if the array of dependencies is empty the effect runs only on the first load of the component\n\n  useEffect(() => {\n    getMovies();\n  }, []);\n\n  async function getMovies() {\n    const res = await axios('https://ancient-caverns-16784.herokuapp.com/movies');\n    setMovies(res.data.results);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, movies.map(movie => /*#__PURE__*/React.createElement(MovieCard, {\n    film: movie,\n    key: movie._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 35\n    }\n  })));\n}\n\nexport default MovieList;","map":{"version":3,"sources":["/home/john/Documents/work/siit-react-master/src/components/movies/MovieList.js"],"names":["React","useState","useEffect","axios","MovieCard","MovieList","movies","setMovies","getMovies","res","data","results","map","movie","_id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,SAASC,SAAT,GAAqB;AACjB;AACA;AACA;AACA,MAAI,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAAlC,CAJiB,CAMjB;AACA;AACA;AACA;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACbM,IAAAA,SAAS;AACX,GAFQ,EAEN,EAFM,CAAT;;AAIA,iBAAeA,SAAf,GAA2B;AACvB,UAAMC,GAAG,GAAG,MAAMN,KAAK,CAAC,oDAAD,CAAvB;AACAI,IAAAA,SAAS,CAACE,GAAG,CAACC,IAAJ,CAASC,OAAV,CAAT;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACML,MAAM,CAACM,GAAP,CAAWC,KAAK,iBAAI,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAGA,KAAlB;AAA0B,IAAA,GAAG,EAAGA,KAAK,CAACC,GAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAApB,CADN,CADJ;AAOH;;AAED,eAAeT,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport MovieCard from \"./MovieCard\";\r\n\r\nfunction MovieList() {\r\n    // the variable declaration is made using an array destructuring assignment\r\n    // useState sets up a state variable and a setter function for that state variable\r\n    // when the state variable changes the component gets updated\r\n    let [movies, setMovies] = useState([]);\r\n\r\n    // useEffect runs side effects for our component\r\n    // side effects are any actions that are either influenced from outside the component or are influencing other things outside our component\r\n    // useEffect has a function as the first param and an array of state variables or props which it depends on as the second variable\r\n    // if the array of dependencies is empty the effect runs only on the first load of the component\r\n    useEffect(() => {\r\n       getMovies();\r\n    }, []);\r\n\r\n    async function getMovies() {\r\n        const res = await axios('https://ancient-caverns-16784.herokuapp.com/movies');\r\n        setMovies(res.data.results);\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            { movies.map(movie => <MovieCard film={ movie } key={ movie._id } />) }\r\n\r\n            {/* { movies.length ? movies.map(movie => <MovieCard film={ movie } />) : 'Loading ...'} */}             \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MovieList;"]},"metadata":{},"sourceType":"module"}